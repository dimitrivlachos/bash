# Alias definitions
alias ls='ls --color=auto'
alias cdu='cd /dls/science/users/rto52325/'

# Load modules
module load cuda
module load cmake

# Set conda packages directory
export CONDA_PKGS_DIRS="/dls/science/users/rto52325/.conda/pkgs"

# Define colors
VEN_COLOR="\[\033[0;32m\]"   # Green for virtual environment
DIR_COLOR="\[\033[1;34m\]"   # Blue for directory
USER_COLOR="\[\033[1;33m\]"  # Yellow for username
HOST_COLOR="\[\033[1;33m\]"  # Yellow for hostname
RESET_COLOR="\[\033[0m\]"    # Reset color to default

# Default toggle values
export SHOW_GIT_BRANCH=0
export DIR_LENGTH="short"

# Parse git branch
function parse_git_branch() {
    if [ "$SHOW_GIT_BRANCH" -eq 1 ]; then
        local branch_name
        branch_name="$(git symbolic-ref --short HEAD 2>/dev/null)"
        if [ -n "$branch_name" ]; then
            echo " ($branch_name)"
        fi
    fi
}

# Parse virtual environment
function parse_virtualenv() {
    local env_name
    env_name="$(mamba env list | awk '/^ *\*/ {print $2}' | awk -F'/' '{n=split($0,a,"/"); print a[n-1]"/"a[n]}')"
    if [ -n "$env_name" ]; then
        echo -e "(${VEN_COLOR}${env_name}${RESET_COLOR})"
    fi
}

# Map hostname to a more readable name
declare -A HOSTNAME_MAP
HOSTNAME_MAP["cs04r-sc-serv-132.diamond.ac.uk"]="i03-gpu"
HOSTNAME_MAP["cs04r-sc-serv-133.diamond.ac.uk"]="i24-gpu"

# Function to map hostname
function map_hostname() {
    local given_hostname="$1"
    local mapped_name="${HOSTNAME_MAP[$given_hostname]}"
    if [ -n "$mapped_name" ]; then
        echo "$mapped_name"
    else
        echo "\h"
    fi
}

# Set PS1
function set_prompt() {
    local venv branch dir
    venv="$(parse_virtualenv)"
    branch="$(parse_git_branch)"
    if [ "$DIR_LENGTH" == "short" ]; then
        dir="\W"
    else
        dir="\w"
    fi
    PS1="${venv}[${USER_COLOR}\u${RESET_COLOR}@${HOST_COLOR}$(map_hostname $(hostname))${RESET_COLOR}:${DIR_COLOR}${dir}${RESET_COLOR}${branch}]\$ "
}

# Toggle git branch display
function toggle_git_branch() {
    if [ "$SHOW_GIT_BRANCH" -eq 0 ]; then
        export SHOW_GIT_BRANCH=1
        echo "Git branch display enabled."
    else
        export SHOW_GIT_BRANCH=0
        echo "Git branch display disabled."
    fi
    set_prompt
}

# Toggle directory length
function toggle_dir_length() {
    if [ "$DIR_LENGTH" == "short" ]; then
        export DIR_LENGTH="long"
        echo "Directory display set to long."
    else
        export DIR_LENGTH="short"
        echo "Directory display set to short."
    fi
    set_prompt
}

# Help function
function prompt_help() {
    echo "Prompt customization commands:"
    echo "  toggle_git      - Toggle the display of the current git branch in the prompt."
    echo "  toggle_dir      - Toggle the display of the directory between short (\W) and long (\w) formats."
    echo "  prompt_help     - Show this help message."
}

# Aliases to toggle elements and show help
alias toggle_git='toggle_git_branch'
alias toggle_dir='toggle_dir_length'
alias prompt_help='prompt_help'

# Bash completion for custom aliases
function _custom_prompt_completion() {
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    opts="toggle_git toggle_dir prompt_help"

    if [[ ${cur} == * ]]; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
    fi
}

complete -F _custom_prompt_completion toggle_git
complete -F _custom_prompt_completion toggle_dir
complete -F _custom_prompt_completion prompt_help

# Set prompt initially
set_prompt

# Display help message on startup
# prompt_help
